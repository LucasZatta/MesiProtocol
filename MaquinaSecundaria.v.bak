module MaquinaSecundaria(Clk, Test_CPU, Hit_InstrucaoD, Estado_Inicial, RM, WM, Invalid, WB, Mem_access, New_Estado);
	input Clk, Test_CPU, Hit_InstrucaoD;
	input [1:0] Estado_Inicial;
	input RM, WM, Invalid;
	output reg WB, Mem_access;
	output reg [1:0]New_Estado;
	
	
	always@(posedge Clk)
	begin
		if(~Test_CPU & Hit_InstrucaoD)
			begin
				case(Estado_Inicial)
					2'b00:
						begin
							if(RM)
								begin
									WB = 0;
									Mem_access = 0;
									New_Estado = 2'b10;
								end
							if(WM || Invalid)
								begin
									WB = 0;
									Mem_access = 0;
									New_Estado = 2'b01;
								end
						
						end
					2'b01:
						begin
							WB = 0;
							Mem_access = 0;
							New_Estado = 2'b01;
						end
					2'b10:
						begin
							if(WM)
								begin
									WB = 0;
									Mem_access = 0;
									New_Estado = 2'b01;
								end
							else
							if(Invalid)
								begin
									WB = 0;
									Mem_access = 0;
									New_Estado = 2'b01;
								end
							else
							if(RM)
								begin
									WB = 0;
									Mem_access = 0;
									New_Estado = 2'b10;
								end
							else
								begin
									WB = 0;
									Mem_access = 0;
									New_Estado = Estado_Inicial;
							end
						end
					2'b11:
						begin
							if(WM)
								begin
									WB = 1;
									Mem_access = 1;
									New_Estado = 2'b01;
								end
							if(RM)
								begin
									WB = 1;
									Mem_access = 1;
									New_Estado = 2'b10;
								end
						end
					
				endcase
			end
			else
				begin
					WB = 0;
					Mem_access = 0;
					New_Estado = Estado_Inicial;
				end
		end

endmodule